@startuml auth-request-reset-password
title Sequence Diagram: Auth (request reset password)

actor "User" as User

participant "<<javaScript>>\n:server" as Server
participant "<<router>>\n:auth" as Router
participant "<<controller>>\n:auth" as Controller
participant "<<model>>\n:User" as UserModel
participant "<<model>>\n:ResetPasswordToken" as ResetPasswordTokenModel
participant "<<service>>\n:email" as EmailService
database "<<MongoDB>>\n:users" as UserMongoDB
database "<<MongoDB>>\n:resetPasswordTokens" as ResetPasswordTokenMongoDB

User -> Server : req.post('/api/v1/auth/request-reset-password')
activate Server

Server -> Router : app.use('/auth', auth)
activate Router

Router -> Controller : requestResetPassword
activate Controller

Controller -> UserModel : findOne(req.body.email)
activate UserModel

UserModel -> UserMongoDB : UserSchema
activate UserMongoDB
UserMongoDB --> UserModel : user
deactivate UserMongoDB

UserModel --> Controller : user
deactivate UserModel

Controller -> ResetPasswordTokenModel : create({ user: user._id, token })
activate ResetPasswordTokenModel

ResetPasswordTokenModel -> ResetPasswordTokenMongoDB : ResetPasswordTokenSchema
activate ResetPasswordTokenMongoDB
ResetPasswordTokenMongoDB --> ResetPasswordTokenModel : resetToken
deactivate ResetPasswordTokenMongoDB

ResetPasswordTokenModel --> Controller : resetToken
deactivate ResetPasswordTokenModel

Controller -> EmailService : getResetPasswordEmailBody(resetToken.token)
activate EmailService
EmailService --> Controller : emailBody
deactivate EmailService

Controller -> EmailService : sendEmail(user.email, emailTitle, emailBody)
activate EmailService
EmailService --> Controller : success
deactivate EmailService

Controller --> Router : response
deactivate Controller

Router --> Server : response
deactivate Router

Server --> User : response
deactivate Server

@enduml
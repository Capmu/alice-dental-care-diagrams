@startuml auth-reset-password
title Sequence Diagram: Auth (reset password)

actor "User" as User

participant "<<javaScript>>\n:server" as Server
participant "<<router>>\n:auth" as Router
participant "<<controller>>\n:auth" as Controller
participant "<<model>>\n:ResetPasswordToken" as ResetPasswordTokenModel
participant "<<model>>\n:User" as UserModel
database "<<MongoDB>>\n:resetPasswordTokens" as ResetPasswordTokenMongoDB
database "<<MongoDB>>\n:users" as UserMongoDB

User -> Server : req.post('/api/v1/auth/reset-password/:token')
activate Server

Server -> Router : app.use('/auth', auth)
activate Router

Router -> Controller : resetPassword
activate Controller

Controller -> ResetPasswordTokenModel : findOne(req.params.token)
activate ResetPasswordTokenModel

ResetPasswordTokenModel -> ResetPasswordTokenMongoDB : ResetPasswordTokenSchema
activate ResetPasswordTokenMongoDB
ResetPasswordTokenMongoDB --> ResetPasswordTokenModel : resetToken
deactivate ResetPasswordTokenMongoDB

ResetPasswordTokenModel --> Controller : resetToken
deactivate ResetPasswordTokenModel

Controller -> UserModel : findById(resetToken.user)
activate UserModel

UserModel -> UserMongoDB : UserSchema
activate UserMongoDB
UserMongoDB --> UserModel : user
deactivate UserMongoDB

UserModel --> Controller : user
deactivate UserModel

Controller -> UserModel : user.save()
activate UserModel
UserModel --> Controller : success
deactivate UserModel

Controller -> ResetPasswordTokenModel : deleteOne({ _id: resetToken._id })
activate ResetPasswordTokenModel

ResetPasswordTokenModel -> ResetPasswordTokenMongoDB : ResetPasswordTokenSchema
activate ResetPasswordTokenMongoDB
ResetPasswordTokenMongoDB --> ResetPasswordTokenModel : success
deactivate ResetPasswordTokenMongoDB

ResetPasswordTokenModel --> Controller : success
deactivate ResetPasswordTokenModel

Controller --> Router : response
deactivate Controller

Router --> Server : response
deactivate Router

Server --> User : response
deactivate Server

@enduml
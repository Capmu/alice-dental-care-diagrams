@startuml booking-post
title Sequence Diagram: Manage Booking (post)

actor "User" as User

participant "<<javaScript>>\n:server" as Server
participant "<<router>>\n:bookings" as Router
participant "<<controller>>\n:bookings" as Controller
participant "<<model>>\n:Dentist" as DentistModel
participant "<<model>>\n:Booking" as BookingModel
database "<<MongoDB>>\n:dentist" as DentistMongoDB
database "<<MongoDB>>\n:bookings" as BookingMongoDB

User -> Server : req.post('/dentists/:dentistId/bookings')
activate Server

Server -> Router : app.use('/bookings', bookings)
activate Router

Router -> Controller : addBooking
activate Controller

Controller -> DentistModel : findById(req.params.dentistId)
activate DentistModel

DentistModel -> DentistMongoDB : DentistSchema
activate DentistMongoDB
DentistMongoDB --> DentistModel : dentist
deactivate DentistMongoDB

DentistModel --> Controller : dentist
deactivate DentistModel

Controller -> BookingModel : find({ user: req.user.id })
activate BookingModel

BookingModel -> BookingMongoDB : BookingSchema
activate BookingMongoDB
BookingMongoDB --> BookingModel : existedBooking
deactivate BookingMongoDB

BookingModel --> Controller : existedBooking
deactivate BookingModel

Controller -> BookingModel : create(req.body)
activate BookingModel

BookingModel -> BookingMongoDB : BookingSchema
activate BookingMongoDB
BookingMongoDB --> BookingModel : booking
deactivate BookingMongoDB

BookingModel --> Controller : booking
deactivate BookingModel

Controller --> Router : booking
deactivate Controller

Router --> Server : response
deactivate Router

Server --> User : response
deactivate Server

@enduml